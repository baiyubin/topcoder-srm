import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class AlienAndGame {
    /**
     * Solution:
     *      Do not care about the actual color, just count the number of consecution segments in the row
     *
     *      For each column, find the fitting consecutive counts in the col
     *
     * @param  board [description]
     * @return       [description]
     */
    public int getNumber(String[] board) {
        int N = board.length;
        int M = board[0].length();
        int[][] count = new int[N][M];
        for (int i = 0; i < N; ++i) {
            count[i][0] = 1;
            for (int j = 1; j < M; ++j) {
                if (board[i].charAt(j) == board[i].charAt(j - 1)) {
                    count[i][j] = count[i][j - 1] + 1;
                } else {
                    count[i][j] = 1;
                }
            }
        }
        int maxSize = 1;
        for (int col = 0; col < M; ++col) {
            for (int size = N; size >= 1; --size) {
                boolean sizeValid = false;
                for (int start = 0; start <= N - size; ++start) {
                    boolean currValid = true;
                    for (int curr = start; curr < start + size; ++curr) {
                        if (count[curr][col] < size) {
                            currValid = false;
                            break;
                        }
                    }
                    if (currValid) {
                        sizeValid = true;
                        break;
                    }
                }
                if (sizeValid) {
                    maxSize = Math.max(maxSize, size);
                    break;
                }
            }
        }
        return maxSize * maxSize;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print("\"" + p0[i] + "\"");
        }
        System.out.print("}");
        System.out.println("]");
        AlienAndGame obj;
        int answer;
        obj = new AlienAndGame();
        long startTime = System.currentTimeMillis();
        answer = obj.getNumber(p0);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p1);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p1;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }
    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        String[] p0;
        int p1;

        // ----- test 0 -----
        p0 = new String[] {"BB", "WW"};
        p1 = 4;
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = new String[] {"W"};
        p1 = 1;
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = new String[] {"WBBB", "WBBB", "WWWW"};
        p1 = 9;
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = new String[] {"W", "B", "W", "W", "W"};
        p1 = 1;
        all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = new String[] {"BWBBWBB", "WWBWWBW", "BBBBBBW", "WBBBBWB", "BBWWWWB", "WWWWWWW", "BBWWBBB"};
        p1 = 9;
        all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!

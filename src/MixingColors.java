import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class MixingColors {
    public static int minColors(int[] colors) {
        int count = 0;
        Arrays.sort(colors);
        while (colors[colors.length - 1] != 0) {
            int x = colors[colors.length - 1];
            for (int i = 0; i < colors.length; i++)
                if ((colors[i] ^ x) < colors[i])
                    colors[i] ^= x;
            Arrays.sort(colors);
            count++;
        }
        return count;
    }
    public int minColorsWA(int[] colors) {
        boolean[] bit = new boolean[64];
        for (int c : colors) {
            for (int i = 0; i < 64 && c != 0; ++i) {
                if ( c % 2 == 1) bit[i] = true;
                c = c >> 1;
            }
        }
        int ret = 0;
        for (int i = 0; i < 64; ++i) {
            if ( bit[i] ) {
                boolean dup = true;
                for (int j = i + 1; j < 64; ++j)
                    if (bit[j]) {
                        int mask = (1 << i) | (1 << j);
                        boolean diff = false;
                        for (int c : colors) {
                            int r = mask & c;
                            if (r != mask && r != 0) diff = true;
                        }
                        if (diff) dup = false;
                    }
                if (!dup) ret++;
            }
        }
        return Math.min(ret, colors.length);
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}");
        System.out.println("]");
        MixingColors obj;
        int answer;
        obj = new MixingColors();
        long startTime = System.currentTimeMillis();
        answer = obj.minColors(p0);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p1);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p1;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }
    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int[] p0;
        int p1;

        // ----- test 0 -----
        p0 = new int[] {4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 16, 32, 64, 128, 256, 512, 1024, 2048, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 999999999, 1000000000, 15};
        p1 = 27;
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = new int[] {145807200, 364805925, 12371716, 27287585, 15012100, 190249128, 43009218, 233769536, 65094327, 27480096, 24425730, 21179392, 305722240, 110696832, 56348280, 129085580, 713176, 94628004, 26749800, 35146650, 121107420, 137798064, 8252640, 60151368, 64794600, 51017472, 228875760, 172884294, 4479744, 54462144};
        p1 = 27;
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};
        p1 = 4;
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = new int[] {534, 251, 76, 468, 909, 410, 264, 387, 102, 982, 199, 111, 659, 386, 151};
        p1 = 10;
        all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = new int[] {4, 8, 16, 32, 64, 128, 256, 512, 1024};
        p1 = 9;
        all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!

import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class RectangleCoveringEasy {
    public int solve(int holeH, int holeW, int boardH, int boardW) {
        int hMin = Math.min(holeH, holeW);
        int hMax = Math.max(holeH, holeW);
        int bMin = Math.min(boardH, boardW);
        int bMax = Math.max(boardH, boardW);
        if (bMin < hMin || bMax < hMax) return -1;
        if (bMin == hMin && bMax == hMax) return -1;
        return 1;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, int p4) {
        System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
        System.out.println("]");
        RectangleCoveringEasy obj;
        int answer;
        obj = new RectangleCoveringEasy();
        long startTime = System.currentTimeMillis();
        answer = obj.solve(p0, p1, p2, p3);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p4);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p4;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }
    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int p0;
        int p1;
        int p2;
        int p3;
        int p4;

        // ----- test 0 -----
        p0 = 1;
        p1 = 1;
        p2 = 1;
        p3 = 1;
        p4 = -1;
        all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = 3;
        p1 = 5;
        p2 = 4;
        p3 = 6;
        p4 = 1;
        all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = 10;
        p1 = 20;
        p2 = 25;
        p3 = 15;
        p4 = 1;
        all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = 3;
        p1 = 10;
        p2 = 3;
        p3 = 12;
        p4 = 1;
        all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!

import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class BuyingTshirts
{
	public int meet(int T, int[] Q, int[] P)
	{
		int ret = 0;
        int n = Q.length;
        int qq = 0, pp = 0;
        for (int i = 0; i < n; i++) {
            qq += Q[i];
            pp += P[i];
            if (qq >= T && pp >= T) ret++;
            qq %= T;
            pp %= T;
        }
        return ret;
    }
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		BuyingTshirts obj;
		int answer;
		obj = new BuyingTshirts();
		long startTime = System.currentTimeMillis();
		answer = obj.meet(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int[] p2;
		int p3;
		
		// ----- test 0 -----
		p0 = 5;
		p1 = new int[]{1,2,3,4,5};
		p2 = new int[]{5,4,3,2,1};
		p3 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 10;
		p1 = new int[]{10,10,10};
		p2 = new int[]{10,10,10};
		p3 = 3;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 2;
		p1 = new int[]{1,2,1,2,1,2,1,2};
		p2 = new int[]{1,1,1,1,2,2,2,2};
		p3 = 5;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 100;
		p1 = new int[]{1,2,3};
		p2 = new int[]{4,5,6};
		p3 = 0;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 10;
		p1 = new int[]{10,1,10,1};
		p2 = new int[]{1,10,1,10};
		p3 = 0;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// PROBLEM STATEMENT
	// A local store is selling T-shirts with the face of Fox Ciel printed on them.
	// Each such T-shirt costs T pesos.
	// Quimey and Pablo love those T-shirts.
	// They each buy a new T-shirt whenever they have the money to do so.
	// 
	// Currently, Quimey and Pablo have no money at all.
	// During the following N days they are going to earn some money and they will use it to buy the T-shirts.
	// The days are numbered from 0 (today) to N-1 (the day N-1 days in the future).
	// 
	// For each valid i, Q[i] and P[i] are the amounts in pesos Quimey and Pablo will earn on day i.
	// (Note that each of those amounts is at most T. 
	// Therefore, Quimey and Pablo will be able to buy at most one T-shirt each day.)
	// 
	// For example, suppose that a T-shirt costs T=10 pesos.
	// If Q={2,3,5,10}, the following will happen to Quimey:
	// 
	// On day 0, he earns 2 pesos. He now has 2 pesos.
	// On day 1, he earns 3 pesos. He now has 5 pesos.
	// On day 2, he earns 5 pesos. He now has 10 pesos, which is enough to buy a T-shirt. He goes to the store and buys one. Afterwards, he has 0 pesos left.
	// On day 3, he earns 10 pesos. He then goes to buy a second T-shirt. Afterwards, he again has 0 pesos left.
	// 
	// If P={10,8,6,4}, Pablo would buy one T-shirt on day 0, and then another T-shirt on day 2. After buying the T-shirt on day 2 he would have 4 pesos left. After day 3 he would then have a total of 8 pesos, which is still not enough for a T-shirt.
	// Note that in this example Quimey and Pablo would go to the store together on day 2.
	// 
	// You are given the int T: the price of a single T-shirt.
	// You are also given the int[]s Q and P with N elements each: the amounts Quimey and Pablo earn each day.
	// Compute and return the number of days on which Quimey and Pablo both go to the store
	// 
	// DEFINITION
	// Class:BuyingTshirts
	// Method:meet
	// Parameters:int, int[], int[]
	// Returns:int
	// Method signature:int meet(int T, int[] Q, int[] P)
	// 
	// 
	// NOTES
	// -If you need the number N in your solution, you can determine it as the number of elements in Q.
	// 
	// 
	// CONSTRAINTS
	// -T will be between 1 and 100.
	// -Q will contain between 1 and 100 elements.
	// -Q and P will contain the same number of elements.
	// -Each element of Q will be between 1 and T.
	// -Each element of P will be between 1 and T.
	// 
	// 
	// EXAMPLES
	// 
	// 0)
	// 5
	// {1,2,3,4,5}
	// {5,4,3,2,1}
	// 
	// Returns: 2
	// 
	// Quimey will buy his T-shirts on days 2, 3, and 4.
	// Pablo will buy his on days 0, 2, and 4.
	// They will go to the store together twice: first on day 2 and then on day 4.
	// 
	// 1)
	// 10
	// {10,10,10}
	// {10,10,10}
	// 
	// Returns: 3
	// 
	// 
	// 
	// 2)
	// 2
	// {1,2,1,2,1,2,1,2}
	// {1,1,1,1,2,2,2,2}
	// 
	// Returns: 5
	// 
	// They will both go to the store on the following days: 1, 3, 5, 6, and 7.
	// 
	// 3)
	// 100
	// {1,2,3}
	// {4,5,6}
	// 
	// Returns: 0
	// 
	// In this test case they do not buy any T-shirts at all.
	// 
	// 4)
	// 10
	// {10,1,10,1}
	// {1,10,1,10}
	// 
	// Returns: 0
	// 
	// 
	// 
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!

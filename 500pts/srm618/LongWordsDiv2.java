import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class LongWordsDiv2 {
    char[] w;
    private boolean like() {
        for (char c : w) {
            if (c > 'Z' || c < 'A') return false;
        }
        int n = w.length;
        for (int i = 1; i < n; i++) {
            if ( w[i - 1] == w[i]) return false;
        }
        for (int i = 0; i < n; i++) {
            for (int ii = i + 1; ii < n; ii++) {
                for (int j = ii + 1; j < n; j++) {
                    for (int jj = j + 1; jj < n; jj++) {
                        if (w[i] == w[j] && w[ii] == w[jj]) return false;
                    }
                }
            }
        }

        return true;
    }
    public String find(String word) {
        this.w = word.toCharArray();
        return like() ? "Likes" : "Dislikes";
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
        System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
        System.out.println("]");
        LongWordsDiv2 obj;
        String answer;
        obj = new LongWordsDiv2();
        long startTime = System.currentTimeMillis();
        answer = obj.find(p0);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + "\"" + p1 + "\"");
        }
        System.out.println("Your answer:");
        System.out.println("\t" + "\"" + answer + "\"");
        if (hasAnswer) {
            res = answer.equals(p1);
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }
    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        String p0;
        String p1;

        // ----- test 0 -----
        p0 = "AAA";
        p1 = "Dislikes";
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = "ABCBA";
        p1 = "Likes";
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = "ABCBAC";
        p1 = "Dislikes";
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = "TOPCODER";
        p1 = "Likes";
        all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = "VAMOSGIMNASIA";
        p1 = "Dislikes";
        all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
        // ------------------

        // ----- test 5 -----
        p0 = "SINGLEROUNDMATCH";
        p1 = "Likes";
        all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
        // ------------------

        // ----- test 6 -----
        p0 = "DALELOBO";
        p1 = "Likes";
        all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!

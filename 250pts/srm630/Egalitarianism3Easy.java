import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class Egalitarianism3Easy {
    int ret = 2;
    int n;
    int[][] dist;
    int currD;
    Stack<Integer> s = new Stack<Integer>();

    public int maxCities(int n, int[] a, int[] b, int[] len) {
        if (n == 1) return 1;
        this.n = n;
        dist = new int[n][n];
        for (int[] arr : dist) {
            Arrays.fill(arr, 200000);
        }

        for (int i = 0; i < len.length; ++i) {
            int ai = a[i] - 1;
            int bi = b[i] - 1;
            dist[ai][bi] = dist[bi][ai] = len[i];
        }


        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                for (int k = 0; k < n; ++k) {
                    dist[j][k] = Math.min(dist[j][i] + dist[i][k], dist[j][k]);
                }
            }
        }

        for (int i = 0; i < (1 << n); ++i) {
            if (Integer.bitCount(i) > ret) {
                if (verify(i)) ret = Integer.bitCount(i);
            }
        }
        return ret;
    }

    public boolean verify(int bitmap) {
        boolean[] used = new boolean[n];
        for (int i = 0; i < n; ++i) {
            if ((bitmap & (1 << i)) != 0) {
                used[i] = true;
            }
        }
        int d = 0;
        for (int i = 0; i < n; ++i) {
            if (used[i]) {
                for (int j = i + 1; j < n; ++j) {
                    if (used[j]) {
                        d = dist[i][j];
                        break;
                    }
                }
                break;
            }
        }

        if (d == 200000) return false;
        for (int i = 0; i < n; ++i) {
            if (used[i]) {
                for (int j = i + 1; j < n; ++j) {
                    if (used[j] && dist[i][j] != d) return false;
                }
            }
        }
        return true;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, int[] p3, boolean hasAnswer, int p4) {
        System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
        for (int i = 0; p1.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p1[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p2.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p2[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p3.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p3[i]);
        }
        System.out.print("}");
        System.out.println("]");
        Egalitarianism3Easy obj;
        int answer;
        obj = new Egalitarianism3Easy();
        long startTime = System.currentTimeMillis();
        answer = obj.maxCities(p0, p1, p2, p3);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p4);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p4;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }
    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int p0;
        int[] p1;
        int[] p2;
        int[] p3;
        int p4;

        // ----- test 5 -----
        p0 = 9;
        p1 = new int[] {1, 6, 3, 9, 6, 1, 6, 6};
        p2 = new int[] {9, 4, 6, 5, 1, 7, 8, 2};
        p3 = new int[] {827, 823, 825, 827, 827, 823, 824, 826};
        p4 = 2;
        all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 0 -----
        p0 = 4;
        p1 = new int[] {1, 1, 1};
        p2 = new int[] {2, 3, 4};
        p3 = new int[] {1, 1, 1};
        p4 = 3;
        all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = 6;
        p1 = new int[] {1, 2, 3, 2, 3};
        p2 = new int[] {2, 3, 4, 5, 6};
        p3 = new int[] {2, 1, 3, 2, 3};
        p4 = 3;
        all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = 10;
        p1 = new int[] {1, 1, 1, 1, 1, 1, 1, 1, 1};
        p2 = new int[] {2, 3, 4, 5, 6, 7, 8, 9, 10};
        p3 = new int[] {1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000};
        p4 = 9;
        all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = 2;
        p1 = new int[] {1};
        p2 = new int[] {2};
        p3 = new int[] {3};
        p4 = 2;
        all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = 1;
        p1 = new int[] {};
        p2 = new int[] {};
        p3 = new int[] {};
        p4 = 1;
        all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!

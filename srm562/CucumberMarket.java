import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class CucumberMarket {
    public String check(int[] price, int budget, int k) {
        Arrays.sort(price);
        int sum = 0;
        for (int i = 0; i < k; i++) {
            sum += price[price.length - 1 - i];
        }
        return (sum <= budget) ? "YES" : "NO";
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, int p2, boolean hasAnswer, String p3) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}" + "," + p1 + "," + p2);
        System.out.println("]");
        CucumberMarket obj;
        String answer;
        obj = new CucumberMarket();
        long startTime = System.currentTimeMillis();
        answer = obj.check(p0, p1, p2);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + "\"" + p3 + "\"");
        }
        System.out.println("Your answer:");
        System.out.println("\t" + "\"" + answer + "\"");
        if (hasAnswer) {
            res = answer.equals(p3);
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }
    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int[] p0;
        int p1;
        int p2;
        String p3;

        // ----- test 0 -----
        p0 = new int[] {1000, 1, 10, 100};
        p1 = 1110;
        p2 = 3;
        p3 = "YES";
        all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = new int[] {1000, 1, 10, 100};
        p1 = 1109;
        p2 = 3;
        p3 = "NO";
        all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = new int[] {33, 4};
        p1 = 33;
        p2 = 1;
        p3 = "YES";
        all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = new int[] {1, 1, 1, 1, 1, 1};
        p1 = 2;
        p2 = 4;
        p3 = "NO";
        all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = new int[] {1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000};
        p1 = 10000;
        p2 = 9;
        p3 = "YES";
        all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
        // ------------------

        if (all_right) {
            System.out.println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // PROBLEM STATEMENT
    //
    // Cucumber Boy is young and loves cucumbers.  Therefore, Cucumber Boy will go to the cucumber market to buy some cucumbers.
    //
    // Different cucumbers may have different costs.  For each i, buying the i-th cucumber (0-based index) costs price[i] yen.
    //
    // Cucumber Boy's mother gave him budget yen.  However, he does not understand money well.
    // He just chooses some k unique cucumbers he likes.  If the total price of the chosen cucumbers is not greater than budget yen, he can buy them, otherwise he cannot.
    //
    // You are given the int[] price, the int budget and the int k.  Your method must return "YES" (quotes for clarity) if Cucumber Boy can buy any set of k unique cucumbers, and "NO" if there is some set of k cucumbers that is too expensive for him.
    //
    //
    //
    // DEFINITION
    // Class:CucumberMarket
    // Method:check
    // Parameters:int[], int, int
    // Returns:String
    // Method signature:String check(int[] price, int budget, int k)
    //
    //
    // CONSTRAINTS
    // -price will contain between 1 and 9 elements, inclusive.
    // -Each element of price will be between 1 and 1000, inclusive.
    // -budget will be between 1 and 10000, inclusive.
    // -k will be between 1 and the number of elements in price, inclusive.
    //
    //
    // EXAMPLES
    //
    // 0)
    // {1000,1,10,100}
    // 1110
    // 3
    //
    // Returns: "YES"
    //
    // There are 4 choices.
    //
    // If he chooses cucumbers 0, 1, and 2, the total price will be 1000+1+10 = 1011 yen.
    // If he chooses cucumbers 0, 1, and 3, the total price will be 1000+1+100 = 1101 yen.
    // If he chooses cucumbers 0, 2, and 3, the total price will be 1000+10+100 = 1110 yen.
    // If he chooses cucumbers 1, 2, and 3, the total price will be 1+10+100 = 111 yen.
    //
    // The result is "YES", because Cucumber Boy can buy any set of k unique cucumbers.
    //
    //
    // 1)
    // {1000,1,10,100}
    // 1109
    // 3
    //
    // Returns: "NO"
    //
    // This case is the same as the example 0, except for the value of budget.
    //
    // If he chooses cucumbers 0, 2, and 3, the total price will be 1000+10+100 = 1110 yen.
    //  1110 yen is greater than the budget therefore the result is "NO".
    //
    // 2)
    // {33,4}
    // 33
    // 1
    //
    // Returns: "YES"
    //
    //
    //
    // 3)
    // {1,1,1,1,1,1}
    // 2
    // 4
    //
    // Returns: "NO"
    //
    //
    //
    // 4)
    // {1000,1000,1000,1000,1000,1000,1000,1000,1000}
    // 10000
    // 9
    //
    // Returns: "YES"
    //
    //
    //
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
